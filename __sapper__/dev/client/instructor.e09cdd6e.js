import { S as SvelteComponentDev, i as init, s as safe_not_equal, e as element, o as text, a as claim_element, b as children, p as claim_text, d as detach, g as add_location, f as attr, h as insert, q as append, r as set_data, G as add_render_callback, H as create_in_transition, n as noop, v as empty, t as transition_in, x as mount_component, l as transition_out, z as destroy_component, C as check_outros, u as space, D as listen, I as update_keyed_each, J as onMount, B as group_outros, K as outro_and_destroy_block } from './chunk.66308fb8.js';
import { f as fade, a as fly } from './chunk.d453e17d.js';
import { c as createCommonjsModule, d as db, m as moment } from './chunk.4d7af833.js';

function showClassIdPopop(classId) {
    var win = window.open("", "BoC - Class ID", "toolbar=no,location=no,directories=no,status=no,menubar=no,scrollbars=no,resizable=yes,width=200,height=50,top="+(screen.height-400)+",left="+(screen.width-840));
    win.document.body.innerHTML = `
      <style>
        body {
          margin: 0;
        }
        #container {
          background-color:rgb(47,47,47);
          display: flex;
          justify-content: center;
          align-items: center;
          flex-direction: column;
          height: 100vh;
        }

        #container > h1 {
          font-family:sans-serif;
          color:white;
          text-align:center;
          font-size: 10vw;
          margin-bottom: 0;
        }

        #container > h2 {
          font-family:sans-serif;
          color:white;
          text-align:center;
          font-size: 5vw;
          margin-top: 0.25rem;
          font-weight: 400;
        }

        #container span {
          text-decoration: underline;
        }
      </style>
      <div id="container">
        <h1>
          Class ID: <span>${classId}</span>
        </h1>
        <h2>
          boredorconfused.com
        </h2>
      </div>
    `;
  }

/* src/components/FeedbackReceived.svelte generated by Svelte v3.6.10 */

const file = "src/components/FeedbackReceived.svelte";

function create_fragment(ctx) {
	var div, h2, strong, t0_value = ctx.item.name, t0, t1, t2_value = ctx.item.formattedTime, t2, t3, div_class_value, div_intro;

	return {
		c: function create() {
			div = element("div");
			h2 = element("h2");
			strong = element("strong");
			t0 = text(t0_value);
			t1 = text(" (");
			t2 = text(t2_value);
			t3 = text(")");
			this.h();
		},

		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true }, false);
			var div_nodes = children(div);

			h2 = claim_element(div_nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			strong = claim_element(h2_nodes, "STRONG", {}, false);
			var strong_nodes = children(strong);

			t0 = claim_text(strong_nodes, t0_value);
			strong_nodes.forEach(detach);
			t1 = claim_text(h2_nodes, " (");
			t2 = claim_text(h2_nodes, t2_value);
			t3 = claim_text(h2_nodes, ")");
			h2_nodes.forEach(detach);
			div_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			add_location(strong, file, 11, 25, 255);
			attr(h2, "class", "title is-5");
			add_location(h2, file, 11, 2, 232);
			attr(div, "class", div_class_value = "notification " + (ctx.bored ? 'is-success' : 'is-danger'));
			add_location(div, file, 10, 0, 158);
		},

		m: function mount(target, anchor) {
			insert(target, div, anchor);
			append(div, h2);
			append(h2, strong);
			append(strong, t0);
			append(h2, t1);
			append(h2, t2);
			append(h2, t3);
		},

		p: function update(changed, ctx) {
			if ((changed.item) && t0_value !== (t0_value = ctx.item.name)) {
				set_data(t0, t0_value);
			}

			if ((changed.item) && t2_value !== (t2_value = ctx.item.formattedTime)) {
				set_data(t2, t2_value);
			}

			if ((changed.bored) && div_class_value !== (div_class_value = "notification " + (ctx.bored ? 'is-success' : 'is-danger'))) {
				attr(div, "class", div_class_value);
			}
		},

		i: function intro(local) {
			if (!div_intro) {
				add_render_callback(() => {
					div_intro = create_in_transition(div, fade, {});
					div_intro.start();
				});
			}
		},

		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(div);
			}
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { item, key } = $$props;

	const writable_props = ['item', 'key'];
	Object.keys($$props).forEach(key => {
		if (!writable_props.includes(key) && !key.startsWith('$$')) console.warn(`<FeedbackReceived> was created with unknown prop '${key}'`);
	});

	$$self.$set = $$props => {
		if ('item' in $$props) $$invalidate('item', item = $$props.item);
		if ('key' in $$props) $$invalidate('key', key = $$props.key);
	};

	let bored;

	$$self.$$.update = ($$dirty = { item: 1 }) => {
		if ($$dirty.item) { $$invalidate('bored', bored = item.feeling === 'bored' ? true : false); }
	};

	return { item, key, bored };
}

class FeedbackReceived extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, ["item", "key"]);

		const { ctx } = this.$$;
		const props = options.props || {};
		if (ctx.item === undefined && !('item' in props)) {
			console.warn("<FeedbackReceived> was created without expected prop 'item'");
		}
		if (ctx.key === undefined && !('key' in props)) {
			console.warn("<FeedbackReceived> was created without expected prop 'key'");
		}
	}

	get item() {
		throw new Error("<FeedbackReceived>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set item(value) {
		throw new Error("<FeedbackReceived>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get key() {
		throw new Error("<FeedbackReceived>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set key(value) {
		throw new Error("<FeedbackReceived>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

var shortUniqueId_min = createCommonjsModule(function (module) {
(function(){var _ShortUniqueId=function _ShortUniqueId(options){var self=this;this.DEFAULT_RANDOM_ID_LEN=6;this.DICT_RANGES={digits:[48,58],lowerCase:[97,123],upperCase:[65,91]};this.dict=[];this.log=function log(){var args=[],len=arguments.length;while(len--)args[len]=arguments[len];args[0]="[short-unique-id] "+args[0];if(this.debug===true){if(typeof console!=="undefined"&&console!==null){return console.log.apply(console,args)}}return undefined};this.getDict=function getDict(){return this.dict};this.sequentialUUID=function sequentialUUID(){var counterDiv;var counterRem;var id;id="";counterDiv=this.counter;while(true){counterRem=counterDiv%self.dictLength;counterDiv=parseInt(counterDiv/self.dictLength,10);id+=self.dict[counterRem];if(counterDiv===0){break}}this.counter+=1;return id};this.randomUUID=function randomUUID(uuidLength){var id;var randomPartIdx;var _j;if(uuidLength===null||typeof uuidLength==="undefined"){uuidLength=this.DEFAULT_RANDOM_ID_LEN;}if(uuidLength===null||typeof uuidLength==="undefined"||uuidLength<1){throw new Error("Invalid UUID Length Provided")}var idIndex;id="";for(idIndex=_j=0;0<=uuidLength?_j<uuidLength:_j>uuidLength;idIndex=0<=uuidLength?++_j:--_j){randomPartIdx=parseInt(Math.random()*self.dictLength)%self.dictLength;id+=self.dict[randomPartIdx];}return id};this.dictIndex=this._i=0;var rangeType;for(rangeType in self.DICT_RANGES){self.dictRange=self.DICT_RANGES[rangeType];self.lowerBound=self.dictRange[0],self.upperBound=self.dictRange[1];for(this.dictIndex=this._i=this.lowerBound;this.lowerBound<=this.upperBound?this._i<this.upperBound:this._i>this.upperBound;this.dictIndex=this.lowerBound<=this.upperBound?++this._i:--this._i){self.dict.push(String.fromCharCode(self.dictIndex));}}this.dict=this.dict.sort(function(){return Math.random()<=.5});this.dictLength=this.dict.length;if(options===null||typeof options==="undefined"){options={};}this.counter=0;this.debug=options.debug;this.log("Generator created with Dictionary Size "+this.dictLength);};{module.exports=_ShortUniqueId;}})();
});

/* src/routes/instructor.svelte generated by Svelte v3.6.10 */

const file$1 = "src/routes/instructor.svelte";

function get_each_context(ctx, list, i) {
	const child_ctx = Object.create(ctx);
	child_ctx.item = list[i];
	return child_ctx;
}

// (79:4) {#if item.created >= clearDate}
function create_if_block(ctx) {
	var current;

	var feedbackreceived = new FeedbackReceived({
		props: { item: ctx.item, key: ctx.item.created },
		$$inline: true
	});

	return {
		c: function create() {
			feedbackreceived.$$.fragment.c();
		},

		l: function claim(nodes) {
			feedbackreceived.$$.fragment.l(nodes);
		},

		m: function mount(target, anchor) {
			mount_component(feedbackreceived, target, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			var feedbackreceived_changes = {};
			if (changed.allFeedback) feedbackreceived_changes.item = ctx.item;
			if (changed.allFeedback) feedbackreceived_changes.key = ctx.item.created;
			feedbackreceived.$set(feedbackreceived_changes);
		},

		i: function intro(local) {
			if (current) return;
			transition_in(feedbackreceived.$$.fragment, local);

			current = true;
		},

		o: function outro(local) {
			transition_out(feedbackreceived.$$.fragment, local);
			current = false;
		},

		d: function destroy(detaching) {
			destroy_component(feedbackreceived, detaching);
		}
	};
}

// (78:2) {#each allFeedback as item (item.created)}
function create_each_block(key_1, ctx) {
	var first, if_block_anchor, current;

	var if_block = (ctx.item.created >= ctx.clearDate) && create_if_block(ctx);

	return {
		key: key_1,

		first: null,

		c: function create() {
			first = empty();
			if (if_block) if_block.c();
			if_block_anchor = empty();
			this.h();
		},

		l: function claim(nodes) {
			first = empty();
			if (if_block) if_block.l(nodes);
			if_block_anchor = empty();
			this.h();
		},

		h: function hydrate() {
			this.first = first;
		},

		m: function mount(target, anchor) {
			insert(target, first, anchor);
			if (if_block) if_block.m(target, anchor);
			insert(target, if_block_anchor, anchor);
			current = true;
		},

		p: function update(changed, ctx) {
			if (ctx.item.created >= ctx.clearDate) {
				if (if_block) {
					if_block.p(changed, ctx);
					transition_in(if_block, 1);
				} else {
					if_block = create_if_block(ctx);
					if_block.c();
					transition_in(if_block, 1);
					if_block.m(if_block_anchor.parentNode, if_block_anchor);
				}
			} else if (if_block) {
				group_outros();
				transition_out(if_block, 1, 1, () => {
					if_block = null;
				});
				check_outros();
			}
		},

		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},

		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(first);
			}

			if (if_block) if_block.d(detaching);

			if (detaching) {
				detach(if_block_anchor);
			}
		}
	};
}

function create_fragment$1(ctx) {
	var div5, section, div4, div3, div2, div0, h1, t0, t1, h20, t2, t3, h21, t4, t5, t6_value = ctx.nStudents === 1 ? '' : 's', t6, t7, div1, button, t8, strong, t9, t10, hr, t11, each_blocks = [], each_1_lookup = new Map(), div5_intro, current, dispose;

	var each_value = ctx.allFeedback;

	const get_key = ctx => ctx.item.created;

	for (var i = 0; i < each_value.length; i += 1) {
		let child_ctx = get_each_context(ctx, each_value, i);
		let key = get_key(child_ctx);
		each_1_lookup.set(key, each_blocks[i] = create_each_block(key, child_ctx));
	}

	return {
		c: function create() {
			div5 = element("div");
			section = element("section");
			div4 = element("div");
			div3 = element("div");
			div2 = element("div");
			div0 = element("div");
			h1 = element("h1");
			t0 = text("Bored or Confused");
			t1 = space();
			h20 = element("h2");
			t2 = text("Instructor Dashboard");
			t3 = space();
			h21 = element("h2");
			t4 = text(ctx.nStudents);
			t5 = text(" student");
			t6 = text(t6_value);
			t7 = space();
			div1 = element("div");
			button = element("button");
			t8 = text("Class ID:");
			strong = element("strong");
			t9 = text(ctx.classId);
			t10 = space();
			hr = element("hr");
			t11 = space();

			for (i = 0; i < each_blocks.length; i += 1) each_blocks[i].c();
			this.h();
		},

		l: function claim(nodes) {
			div5 = claim_element(nodes, "DIV", { class: true }, false);
			var div5_nodes = children(div5);

			section = claim_element(div5_nodes, "SECTION", { class: true }, false);
			var section_nodes = children(section);

			div4 = claim_element(section_nodes, "DIV", { class: true }, false);
			var div4_nodes = children(div4);

			div3 = claim_element(div4_nodes, "DIV", { class: true }, false);
			var div3_nodes = children(div3);

			div2 = claim_element(div3_nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			h1 = claim_element(div0_nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Bored or Confused");
			h1_nodes.forEach(detach);
			t1 = claim_text(div0_nodes, "\n            ");

			h20 = claim_element(div0_nodes, "H2", { class: true }, false);
			var h20_nodes = children(h20);

			t2 = claim_text(h20_nodes, "Instructor Dashboard");
			h20_nodes.forEach(detach);
			t3 = claim_text(div0_nodes, "\n            ");

			h21 = claim_element(div0_nodes, "H2", { class: true }, false);
			var h21_nodes = children(h21);

			t4 = claim_text(h21_nodes, ctx.nStudents);
			t5 = claim_text(h21_nodes, " student");
			t6 = claim_text(h21_nodes, t6_value);
			h21_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t7 = claim_text(div2_nodes, "\n          ");

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			button = claim_element(div1_nodes, "BUTTON", { class: true }, false);
			var button_nodes = children(button);

			t8 = claim_text(button_nodes, "Class ID:");

			strong = claim_element(button_nodes, "STRONG", {}, false);
			var strong_nodes = children(strong);

			t9 = claim_text(strong_nodes, ctx.classId);
			strong_nodes.forEach(detach);
			button_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			div3_nodes.forEach(detach);
			div4_nodes.forEach(detach);
			section_nodes.forEach(detach);
			t10 = claim_text(div5_nodes, "\n  ");

			hr = claim_element(div5_nodes, "HR", {}, false);
			var hr_nodes = children(hr);

			hr_nodes.forEach(detach);
			t11 = claim_text(div5_nodes, "\n  ");

			for (i = 0; i < each_blocks.length; i += 1) each_blocks[i].l(div5_nodes);

			div5_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(h1, "class", "title");
			add_location(h1, file$1, 59, 12, 1483);
			attr(h20, "class", "subtitle");
			add_location(h20, file$1, 62, 12, 1564);
			attr(h21, "class", "subtitle");
			add_location(h21, file$1, 65, 12, 1651);
			attr(div0, "class", "column");
			add_location(div0, file$1, 58, 10, 1450);
			add_location(strong, file$1, 70, 53, 1913);
			attr(button, "class", "button is-large");
			add_location(button, file$1, 70, 12, 1872);
			attr(div1, "class", "column class-id svelte-1hx083b");
			add_location(div1, file$1, 69, 10, 1783);
			attr(div2, "class", "columns");
			add_location(div2, file$1, 57, 8, 1418);
			attr(div3, "class", "container");
			add_location(div3, file$1, 56, 6, 1386);
			attr(div4, "class", "hero-body");
			add_location(div4, file$1, 55, 4, 1356);
			attr(section, "class", "hero is-dark");
			add_location(section, file$1, 54, 2, 1321);
			add_location(hr, file$1, 76, 2, 2020);
			attr(div5, "class", "container");
			add_location(div5, file$1, 53, 0, 1258);
			dispose = listen(div1, "click", ctx.click_handler);
		},

		m: function mount(target, anchor) {
			insert(target, div5, anchor);
			append(div5, section);
			append(section, div4);
			append(div4, div3);
			append(div3, div2);
			append(div2, div0);
			append(div0, h1);
			append(h1, t0);
			append(div0, t1);
			append(div0, h20);
			append(h20, t2);
			append(div0, t3);
			append(div0, h21);
			append(h21, t4);
			append(h21, t5);
			append(h21, t6);
			append(div2, t7);
			append(div2, div1);
			append(div1, button);
			append(button, t8);
			append(button, strong);
			append(strong, t9);
			append(div5, t10);
			append(div5, hr);
			append(div5, t11);

			for (i = 0; i < each_blocks.length; i += 1) each_blocks[i].m(div5, null);

			current = true;
		},

		p: function update(changed, ctx) {
			if (!current || changed.nStudents) {
				set_data(t4, ctx.nStudents);
			}

			if ((!current || changed.nStudents) && t6_value !== (t6_value = ctx.nStudents === 1 ? '' : 's')) {
				set_data(t6, t6_value);
			}

			const each_value = ctx.allFeedback;

			group_outros();
			each_blocks = update_keyed_each(each_blocks, changed, get_key, 1, ctx, each_value, each_1_lookup, div5, outro_and_destroy_block, create_each_block, null, get_each_context);
			check_outros();
		},

		i: function intro(local) {
			if (current) return;
			for (var i = 0; i < each_value.length; i += 1) transition_in(each_blocks[i]);

			if (!div5_intro) {
				add_render_callback(() => {
					div5_intro = create_in_transition(div5, fly, { y: -50, duration: 500 });
					div5_intro.start();
				});
			}

			current = true;
		},

		o: function outro(local) {
			for (i = 0; i < each_blocks.length; i += 1) transition_out(each_blocks[i]);

			current = false;
		},

		d: function destroy(detaching) {
			if (detaching) {
				detach(div5);
			}

			for (i = 0; i < each_blocks.length; i += 1) each_blocks[i].d();

			dispose();
		}
	};
}

function instance$1($$self, $$props, $$invalidate) {
	
	let uid = new shortUniqueId_min();

	let classId = uid.randomUUID(4).toLowerCase();

  onMount(() => {
    db.collection('classes')
    .doc(classId)
    .set({ 
      feedback: [],
      students: []
    });

    const instructorsClass = db.collection('classes').doc(classId);

    instructorsClass.onSnapshot(function(doc) {
      let data = doc.data();
      console.log(data);
      $$invalidate('nStudents', nStudents = data.students.length);
      $$invalidate('allFeedback', allFeedback = data.feedback
        .sort((a, b) => (a.created < b.created) ? 1 : -1)
        .map(stuff => ({
        ...stuff,
        formattedTime: moment(stuff.created).fromNow()
      })));
    });
  }); 

	let allFeedback = [];
  let clearDate = new Date();
  let nStudents = 0;

	function click_handler() { showClassIdPopop(classId); }

	return {
		classId,
		allFeedback,
		clearDate,
		nStudents,
		click_handler
	};
}

class Instructor extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, []);
	}
}

export default Instructor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
