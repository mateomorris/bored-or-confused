import { S as SvelteComponentDev, i as init, s as safe_not_equal, e as element, o as text, u as space, a as claim_element, b as children, p as claim_text, d as detach, f as attr, g as add_location, D as listen, h as insert, q as append, n as noop, E as run_all, F as createEventDispatcher } from './chunk.66308fb8.js';

/* src/routes/LandingScreen.svelte generated by Svelte v3.6.10 */

const file = "src/routes/LandingScreen.svelte";

function create_fragment(ctx) {
	var h1, t0, t1, h2, t2, t3, div2, div0, button0, t4, t5, div1, button1, t6, dispose;

	return {
		c: function create() {
			h1 = element("h1");
			t0 = text("Bored or Confused");
			t1 = space();
			h2 = element("h2");
			t2 = text("A tool for discreetly giving feedback to an instructor while they're lecturing. Great for introverts.");
			t3 = space();
			div2 = element("div");
			div0 = element("div");
			button0 = element("button");
			t4 = text("Student");
			t5 = space();
			div1 = element("div");
			button1 = element("button");
			t6 = text("Instructor");
			this.h();
		},

		l: function claim(nodes) {
			h1 = claim_element(nodes, "H1", { class: true }, false);
			var h1_nodes = children(h1);

			t0 = claim_text(h1_nodes, "Bored or Confused");
			h1_nodes.forEach(detach);
			t1 = claim_text(nodes, "\n");

			h2 = claim_element(nodes, "H2", { class: true }, false);
			var h2_nodes = children(h2);

			t2 = claim_text(h2_nodes, "A tool for discreetly giving feedback to an instructor while they're lecturing. Great for introverts.");
			h2_nodes.forEach(detach);
			t3 = claim_text(nodes, "\n");

			div2 = claim_element(nodes, "DIV", { class: true }, false);
			var div2_nodes = children(div2);

			div0 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div0_nodes = children(div0);

			button0 = claim_element(div0_nodes, "BUTTON", { class: true }, false);
			var button0_nodes = children(button0);

			t4 = claim_text(button0_nodes, "Student");
			button0_nodes.forEach(detach);
			div0_nodes.forEach(detach);
			t5 = claim_text(div2_nodes, "\n  ");

			div1 = claim_element(div2_nodes, "DIV", { class: true }, false);
			var div1_nodes = children(div1);

			button1 = claim_element(div1_nodes, "BUTTON", { class: true }, false);
			var button1_nodes = children(button1);

			t6 = claim_text(button1_nodes, "Instructor");
			button1_nodes.forEach(detach);
			div1_nodes.forEach(detach);
			div2_nodes.forEach(detach);
			this.h();
		},

		h: function hydrate() {
			attr(h1, "class", "title");
			add_location(h1, file, 18, 0, 243);
			attr(h2, "class", "subtitle");
			add_location(h2, file, 19, 0, 284);
			attr(button0, "class", "button is-large is-fullwidth is-info svelte-1n6ce34");
			add_location(button0, file, 24, 4, 465);
			attr(div0, "class", "column");
			add_location(div0, file, 23, 2, 440);
			attr(button1, "class", "button is-large is-fullwidth is-success svelte-1n6ce34");
			add_location(button1, file, 27, 4, 612);
			attr(div1, "class", "column");
			add_location(div1, file, 26, 2, 587);
			attr(div2, "class", "columns");
			add_location(div2, file, 22, 0, 416);

			dispose = [
				listen(button0, "click", ctx.click_handler),
				listen(button1, "click", ctx.click_handler_1)
			];
		},

		m: function mount(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			insert(target, t1, anchor);
			insert(target, h2, anchor);
			append(h2, t2);
			insert(target, t3, anchor);
			insert(target, div2, anchor);
			append(div2, div0);
			append(div0, button0);
			append(button0, t4);
			append(div2, t5);
			append(div2, div1);
			append(div1, button1);
			append(button1, t6);
		},

		p: noop,
		i: noop,
		o: noop,

		d: function destroy(detaching) {
			if (detaching) {
				detach(h1);
				detach(t1);
				detach(h2);
				detach(t3);
				detach(div2);
			}

			run_all(dispose);
		}
	};
}

function instance($$self) {
	const dispatch = createEventDispatcher();

  function navigate(screen) {
    dispatch('navigate', {
      screen
    });
  }

	function click_handler() { navigate('student'); }

	function click_handler_1() { navigate('instructor'); }

	return { navigate, click_handler, click_handler_1 };
}

class LandingScreen extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, []);
	}
}

export default LandingScreen;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTGFuZGluZ1NjcmVlbi5lYjFhNGQ4MC5qcyIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3JvdXRlcy9MYW5kaW5nU2NyZWVuLnN2ZWx0ZSJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2NyaXB0PlxuXHRpbXBvcnQgeyBjcmVhdGVFdmVudERpc3BhdGNoZXIgfSBmcm9tICdzdmVsdGUnO1xuXHRjb25zdCBkaXNwYXRjaCA9IGNyZWF0ZUV2ZW50RGlzcGF0Y2hlcigpO1xuXG4gIGZ1bmN0aW9uIG5hdmlnYXRlKHNjcmVlbikge1xuICAgIGRpc3BhdGNoKCduYXZpZ2F0ZScsIHtcbiAgICAgIHNjcmVlblxuICAgIH0pXG4gIH1cblxuPC9zY3JpcHQ+XG5cbjxzdHlsZT5cblx0LmJ1dHRvbiB7XG5cdFx0aGVpZ2h0OiA1MHZoO1xuXHR9XG48L3N0eWxlPlxuXG48aDEgY2xhc3M9XCJ0aXRsZVwiPkJvcmVkIG9yIENvbmZ1c2VkPC9oMT5cbjxoMiBjbGFzcz1cInN1YnRpdGxlXCI+XG4gIEEgdG9vbCBmb3IgZGlzY3JlZXRseSBnaXZpbmcgZmVlZGJhY2sgdG8gYW4gaW5zdHJ1Y3RvciB3aGlsZSB0aGV5J3JlIGxlY3R1cmluZy4gR3JlYXQgZm9yIGludHJvdmVydHMuXG48L2gyPlxuPGRpdiBjbGFzcz1cImNvbHVtbnNcIj5cbiAgPGRpdiBjbGFzcz1cImNvbHVtblwiPlxuICAgIDxidXR0b24gY2xhc3M9XCJidXR0b24gaXMtbGFyZ2UgaXMtZnVsbHdpZHRoIGlzLWluZm9cIiBvbjpjbGljaz17KCkgPT4geyBuYXZpZ2F0ZSgnc3R1ZGVudCcpIH19PlN0dWRlbnQ8L2J1dHRvbj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJjb2x1bW5cIj5cbiAgICA8YnV0dG9uIGNsYXNzPVwiYnV0dG9uIGlzLWxhcmdlIGlzLWZ1bGx3aWR0aCBpcy1zdWNjZXNzXCIgb246Y2xpY2s9eygpID0+IHsgbmF2aWdhdGUoJ2luc3RydWN0b3InKSB9fT5JbnN0cnVjdG9yPC9idXR0b24+XG4gIDwvZGl2PlxuPC9kaXY+Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2QkF3Qm1FOzZCQUdHOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBekJyRSxNQUFNLFFBQVEsR0FBRyxxQkFBcUIsRUFBRSxDQUFDOztFQUV4QyxTQUFTLFFBQVEsQ0FBQyxNQUFNLEVBQUU7SUFDeEIsUUFBUSxDQUFDLFVBQVUsRUFBRTtNQUNuQixNQUFNO0tBQ1AsRUFBQztHQUNIOzs7Ozs7Ozs7Ozs7Ozs7Ozs7In0=
